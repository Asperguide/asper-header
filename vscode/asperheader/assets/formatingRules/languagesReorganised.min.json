{"langs":[{"fileExtensions":{"C":[".c",".h"],"C#":["cs"],"C++":["cpp","c++","hpp","h++"],"Chapel":[".chpl"],"Cypher":[".cyp"],"Cypher (Neo4j)":[".cyp"],"D":[".d"],"Dart":[".dart"],"Dylan":[".dylan",".dyl"],"Fantom":[".fan"],"GLSL":[".glsl",".vert",".frag",".geom",".tesc",".tese",".comp"],"Go":[".go"],"Gradle":[".gradle",".gradle.kts"],"Gradle (Groovy)":[".gradle",".gradle.kts"],"Gradle (Groovy/Kotlin DSL)":[".gradle",".gradle.kts"],"Gradle (Kotlin DSL)":[".gradle",".gradle.kts"],"Groovy":[".groovy"],"HLSL":[".hlsl",".fx",".fxh",".cginc"],"IO":[".io"],"JSONC":[".jsonc",".json"],"Java":[".java"],"JavaScript":[".js",".jsx",".mjs"],"Kotlin":[".kt",".kts"],"Less":[".less"],"Metal Shading Language":[".metal"],"Metal Shading Language (Apple)":[".metal"],"Objective-C":[".m",".h"],"Pony":[".pony"],"Processing":[".pde"],"Q#":[".qs"],"QML":[".qml"],"Rust":[".rs"],"SCSS":[".scss"],"Sass":[".sass"],"Scala":[".scala"],"Solidity":[".sol"],"Swift":[".swift"],"TypeScript":[".ts"],"UnrealScript":[".uc"],"V":[".v"],"Verilog":[".v",".sv",".vh"],"WGSL":[".wgsl"],"Zig":[".zig"]},"langs":["C","C++","C#","Java","JavaScript","TypeScript","Swift","Kotlin","IO","Dylan","Fantom","V","Zig","Verilog","JSONC","Go","Rust","Scala","D","Dart","Objective-C","Groovy","Solidity","Sass","SCSS","Less","Q#","QML","Pony","Processing","Chapel","GLSL","HLSL","WGSL","Metal Shading Language (Apple)","Metal Shading Language","Cypher (Neo4j)","Cypher","UnrealScript","Gradle","Gradle (Groovy)","Gradle (Kotlin DSL)","Gradle (Groovy/Kotlin DSL)"],"multiLine":["/*","*","*/"],"prompt_comment_opening_type":false,"quirks":"Doc comments use /** ... */","singleLine":["//"]},{"fileExtensions":{"Agda":[".agda"]},"langs":["Agda"],"multiLine":["{-","-}"],"prompt_comment_opening_type":false,"singleLine":["--"]},{"fileExtensions":{"Idris":[".idr"]},"langs":["Idris"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":["--","|||"]},{"fileExtensions":{"Julia":[".jl"]},"langs":["Julia"],"multiLine":["#=","=#"],"prompt_comment_opening_type":false,"quirks":"Supports nested block comments with #= ... =#.","singleLine":["#"]},{"fileExtensions":{"K":[".k"],"Q":[".q"]},"langs":["K","q"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":["/"]},{"fileExtensions":{"ABAP":[".abap"]},"langs":["ABAP"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":["*","\""]},{"fileExtensions":{"Mojo":[".mojo"]},"langs":["Mojo"],"multiLine":["\"\"\"","\"\"\""],"prompt_comment_opening_type":false,"singleLine":["#"]},{"fileExtensions":{"HQL":[".hql"],"HQL (Hive SQL)":[".hql"],"Pig Latin":[".pig"],"Pig Latin (Hadoop)":[".pig"],"REXX":[".rexx",".rex"]},"langs":["REXX","Pig Latin (Hadoop)","Pig Latin","HQL (Hive SQL)","HQL"],"multiLine":["/*","*","*/"],"prompt_comment_opening_type":false,"singleLine":["--"]},{"fileExtensions":{"HCL":[".hcl"]},"langs":["HCL"],"multiLine":["/*","*","*/"],"prompt_comment_opening_type":false,"singleLine":["#","//"]},{"fileExtensions":{"J":[".j"]},"langs":["J"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":["NB."]},{"fileExtensions":{"INI":[".ini"]},"langs":["INI"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":[";","#"]},{"fileExtensions":{"APL":[".apl"]},"langs":["APL"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":["\u235d"]},{"fileExtensions":{"Forth":[".fth",".fs"]},"langs":["Forth"],"multiLine":["(","*",")"],"prompt_comment_opening_type":false,"singleLine":["\\"]},{"fileExtensions":{"Apache":[".conf"],"Boo":[".boo"],"CMake":["CMakeLists.txt",".cmake"],"Dockerfile":["Dockerfile","dockerfile"],"Expect":[".exp"],"Godot GDScript":[".gd"],"Makefile":["Makefile"],"Nginx":[".conf"],"Nial":[".nial"],"Ninja build files":[".ninja"],"OpenGL ARB Assembly":[".arb"],"Org-mode":[".org"],"Shell":[".sh",".bash",".zsh",".ksh",".fish"],"TOML":[".toml"],"Tcl":[".tcl"]},"langs":["Shell","Apache","Nginx","Dockerfile","Makefile","TOML","Tcl","Expect","Org-mode","CMake","Nial","OpenGL ARB Assembly","Godot GDScript","Boo","Ninja build files"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"No native multi-line comments. Multi-line can be faked with here-docs like `: <<'EOF' ... EOF`.","singleLine":["#"]},{"fileExtensions":{"reStructuredText":[".rst"]},"langs":["reStructuredText"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":[".."]},{"fileExtensions":{"Python":[".py",".pyw",".pyi"]},"langs":["Python"],"multiLine":["\"\"\"","#","\"\"\""],"prompt_comment_opening_type":false,"quirks":"Triple quotes are technically strings, but often used as block comments/docstrings.","singleLine":["#"]},{"fileExtensions":{"Ada":[".adb",".ads"],"Eiffel":[".e"]},"langs":["Eiffel","Ada"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":["--"]},{"fileExtensions":{"Microsoft SQL Server":[".sql"],"SQL":[".sql",".ddl",".dml"],"SQL Express":[".sql"],"Sqlite":[".sqlite",".sqlite3"]},"langs":["SQL","Sqlite","Microsoft SQL Server","SQL Express"],"multiLine":["/*","*","*/"],"prompt_comment_opening_type":false,"quirks":"Some dialects also accept # (MySQL).","singleLine":["--"]},{"fileExtensions":{"Euphoria":[".exu"],"SQL*Plus":[".sql"]},"langs":["SQL*Plus","Euphoria"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":["--"]},{"fileExtensions":{"AArch64":[".s",".S"],"Asciidoc":[".adoc",".asciidoc"],"Gremlin":[".gremlin"]},"langs":["AArch64","Asciidoc","Gremlin"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"ARM 64-bit assembly (AArch64). Usually single-line comments use '//' in modern assemblers.","singleLine":["//"]},{"fileExtensions":{"SPARC":[".s",".S",".asm"]},"langs":["SPARC"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"ARM 64-bit assembly (AArch64). Usually single-line comments use '//' in modern assemblers.","singleLine":["!"]},{"fileExtensions":{"6502":[".asm",".s"],"65C02":[".asm",".s"],"6809":[".asm",".s"],"68k":[".asm",".s"],"8080":[".asm",".s"],"8085":[".asm",".s"],"AVR":[".asm"],"Assembly_6502":[".asm",".s"],"Assembly_Z80":[".asm",".s"],"Assembly_x86":[".asm",".s"],"Clojure":[".clj",".cljs",".cljc"],"Cortex-M":[".s",".asm"],"Itanium_IA64":[".s",".asm"],"MASM":[".asm"],"Motorola_68k":[".asm",".s"],"NASM/TASM":[".asm",".s"],"PDP-11":[".asm",".s"],"PIC16":[".asm"],"PIC18":[".asm"],"PowerPC":[".s",".asm"],"STM32":[".s",".asm"],"VAX":[".s",".asm"],"Z80":[".asm",".s"]},"langs":["Assembly_x86","NASM/TASM","Assembly_6502","Assembly_Z80","MASM","PowerPC","6502","65C02","6809","8080","8085","Z80","Motorola_68k","68k","Itanium_IA64","PIC16","PIC18","AVR","STM32","Cortex-M","PDP-11","VAX","Clojure"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"NASM/TASM use ';'. GAS (AT&T syntax) uses '#'.","singleLine":[";"]},{"fileExtensions":{"ARM":[".s",".asm"],"Assembly_ARM":[".s",".asm"]},"langs":["ARM","Assembly_ARM"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Old ARM assembly uses '@' for single-line comments. No standard block comments.","singleLine":["@",";"]},{"fileExtensions":{"Awk":[".awk"],"Crystal":[".cr"],"Elixir":[".ex",".exs"],"GAS":[".s",".S"],"MIPS":[".s",".asm"],"Perl":[".pl",".pm",".t"],"R":[".r",".R"],"RISC-V":[".s",".S"],"Sed":[".sed"],"YAML":[".yml",".yaml"]},"langs":["YAML","Awk","Sed","R","Elixir","GAS","Perl","MIPS","RISC-V","Crystal"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Must be at line start (no inline after data in some parsers).","singleLine":["#"]},{"fileExtensions":{"HTML":[".html",".htm"],"Markdown":[".md",".markdown"],"XML":[".xml",".xhtml"]},"langs":["HTML","XML","Markdown"],"multiLine":["<!--","--","-->"],"prompt_comment_opening_type":false,"quirks":"SGML-style, must not be nested.","singleLine":[]},{"fileExtensions":{"ColdFusion":[".cfm",".cfc"],"ColdFusion (CFML)":[".cfm",".cfc"]},"langs":["ColdFusion (CFML)","ColdFusion"],"multiLine":["<!---","---","--->"],"prompt_comment_opening_type":false,"singleLine":[]},{"fileExtensions":{"CSS":[".css"],"PL/I":[".pli",".pl1"]},"langs":["CSS","PL/I"],"multiLine":["/*","*","*/"],"prompt_comment_opening_type":false,"quirks":"Only block comments are supported. No single-line comment syntax like `//`.","singleLine":[]},{"fileExtensions":{"Haxe":[".hx"],"Less":[".less"],"SCSS":[".scss"]},"langs":["SCSS","Less","Haxe"],"multiLine":["/*","*","*/"],"prompt_comment_opening_type":false,"singleLine":["//"]},{"fileExtensions":{"PHP":[".php",".phtml"]},"langs":["PHP"],"multiLine":["/*","*","*/"],"prompt_comment_opening_type":false,"quirks":"Supports C-style `/* */` multi-line comments. Both `//` and `#` are valid single-line comment starters.","singleLine":["//","#"]},{"fileExtensions":{"Ruby":[".rb",".rbw"]},"langs":["Ruby"],"multiLine":["=begin","=end"],"prompt_comment_opening_type":false,"quirks":"`=begin`/`=end` must start at column 0. Single-line `#` comments can appear anywhere.","singleLine":["#"]},{"fileExtensions":{"Lisp":[".lisp",".lsp",".cl",".clisp",".el"]},"langs":["Lisp"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"One ';' for inline, ';;' or ';;;' for section/doc conventions.","singleLine":[";"]},{"fileExtensions":{"Racket":[".rkt"],"Scheme":[".scm",".ss",".sld",".sch",".sc"]},"langs":["Scheme","Racket"],"multiLine":["#|","|#"],"prompt_comment_opening_type":false,"quirks":"One ';' for inline, ';;' or ';;;' for section/doc conventions.","singleLine":[";"]},{"fileExtensions":{"Nim":[".nim"]},"langs":["Nim"],"multiLine":["#[","#"," ]#"],"prompt_comment_opening_type":false,"singleLine":["#"]},{"fileExtensions":{"Batch":[".bat",".cmd"]},"langs":["Batch"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":":: is a hack; REM is the official keyword.","singleLine":["REM","::"]},{"fileExtensions":{"VHDL":[".vhdl",".vhd"]},"langs":["VHDL"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"No block comments, only line comments.","singleLine":["--"]},{"fileExtensions":{"Matlab":[".m"],"Octave":[".m"]},"langs":["Matlab","Octave"],"multiLine":["%{","%","%}"],"prompt_comment_opening_type":false,"quirks":"%% marks cell boundaries in scripts.","singleLine":["%"]},{"fileExtensions":{"Octave":[".m"]},"langs":["Octave"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Supports both '#' and '%'.","singleLine":["#","%"]},{"fileExtensions":{"SAS":[".sas"]},"langs":["SAS"],"multiLine":["/*","*","*/"],"prompt_comment_opening_type":false,"quirks":"Single line '*' requires a terminating semicolon.","singleLine":["*"]},{"fileExtensions":{"Stata":[".do",".ado"]},"langs":["Stata"],"multiLine":["/*","*","*/"],"prompt_comment_opening_type":false,"quirks":"* must appear at start of line.","singleLine":["*","//"]},{"fileExtensions":{"Fortran":[".f",".for",".f90",".f95"]},"langs":["Fortran"],"multiLine":[],"prompt_comment_opening_type":true,"quirks":"Older fixed-format Fortran uses column-specific rules.","singleLine":["C","c","*","!"]},{"fileExtensions":{"COBOL":[".cob",".cbl"],"ICON":[".icn"],"SNOBOL":[".sno"]},"langs":["COBOL","SNOBOL","ICON"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Column 7 with '*' denotes a comment line. '*> comment' is free-form.","singleLine":["*"]},{"fileExtensions":{"Ada":[".adb",".ads"]},"langs":["Ada"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"No block comments.","singleLine":["--"]},{"fileExtensions":{"Smalltalk":[".st"]},"langs":["Smalltalk"],"multiLine":["\"","\""],"prompt_comment_opening_type":false,"quirks":"Double quotes enclose comments.","singleLine":[]},{"fileExtensions":{"Mercury":[".m",".mercury"],"Prolog":[".pl",".pro"]},"langs":["Prolog","Mercury"],"multiLine":["/*","*","*/"],"prompt_comment_opening_type":false,"quirks":"Some dialects also allow '//' as single-line.","singleLine":["%"]},{"fileExtensions":{"Mercury":[".m"]},"langs":["Mercury"],"multiLine":["/*","*","*/"],"prompt_comment_opening_type":false,"quirks":"Similar to Prolog but stricter syntax.","singleLine":["%"]},{"fileExtensions":{"Erlang":[".erl",".hrl"],"PostScript":[".ps"]},"langs":["Erlang","PostScript"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"No block comments.","singleLine":["%"]},{"fileExtensions":{"Haskell":[".hs",".lhs"]},"langs":["Haskell"],"multiLine":["{-","-","-}"],"prompt_comment_opening_type":false,"quirks":"Nested block comments are supported.","singleLine":["--"]},{"fileExtensions":{"Pascal":[".pas",".pp"]},"langs":["Pascal"],"multiLine":["(*","*","*)"],"prompt_comment_opening_type":false,"singleLine":[]},{"fileExtensions":{"Lean":[".lean"]},"langs":["Lean"],"multiLine":["/-","-","-/"],"prompt_comment_opening_type":false,"singleLine":[]},{"fileExtensions":{"Coq":[".v"],"Modula-2":[".mod",".def"],"Modula2":[".mod",".def"],"OCaml":[".ml",".mli"],"Oberon":[".ob",".oh"],"ReasonML":[".re",".rei"]},"langs":["OCaml","ReasonML","Modula2","Modula-2","Oberon","Coq"],"multiLine":["(*","*","*)"],"prompt_comment_opening_type":false,"quirks":"Supports nested block comments.","singleLine":[]},{"fileExtensions":{"F#":[".fs",".fsi"]},"langs":["F#"],"multiLine":["(*","*","*)"],"prompt_comment_opening_type":false,"quirks":"Inherited OCaml-style block comments plus C-style single-line.","singleLine":["//"]},{"fileExtensions":{"IBM mainframe JCL":[".jcl"]},"langs":["IBM mainframe JCL"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":["//*"]},{"fileExtensions":{"INTERCAL":[".i"]},"langs":["INTERCAL"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":["PLEASE ignore this"]},{"fileExtensions":{"Nim":[".nim",".nims"]},"langs":["Nim"],"multiLine":["#[","#","]#"],"prompt_comment_opening_type":false,"quirks":"Block comments can be nested.","singleLine":["#"]},{"fileExtensions":{"Crystal":[".cr"]},"langs":["Crystal"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Doc comments use '##'.","singleLine":["#"]},{"fileExtensions":{"Lua":[".lua"]},"langs":["Lua"],"multiLine":["--[[","-","]]"],"prompt_comment_opening_type":false,"quirks":"Multi-line can also be nested with '--[=[ ... ]=]'.","singleLine":["--"]},{"fileExtensions":{"BibTeX":[".bib"],"LaTeX":[".tex"],"TeX":[".tex",".sty",".cls"]},"langs":["TeX","LaTeX","BibTeX"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Entire line after % is ignored.","singleLine":["%"]},{"fileExtensions":{"Algol-W":[".algw"],"Algol60":[".alg",".a60"],"Algol68":[".alg68"],"AlgolW":[".algw"]},"langs":["Algol60","Algol68","AlgolW","Algol-W"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Block comments use the keyword COMMENT followed by a semicolon.","singleLine":["COMMENT","comment"]},{"fileExtensions":{"Logo":[".logo",".lgo"]},"langs":["Logo"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Only single-line comments.","singleLine":[";"]},{"fileExtensions":{"AppleScript":[".applescript",".scpt",".scptd"]},"langs":["AppleScript"],"multiLine":["(*","*","*)"],"prompt_comment_opening_type":false,"quirks":"Nested block comments are supported.","singleLine":["--"]},{"fileExtensions":{"LOLCODE":[".lol",".lc"]},"langs":["LOLCODE"],"multiLine":["OBTW","NEXT","TLDR"],"prompt_comment_opening_type":false,"quirks":"Only idiomatic block comments using OBTW/TLDR.","singleLine":["BTW"]},{"fileExtensions":{"INTERCAL":[".i",".inc"]},"langs":["INTERCAL"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Comments are written as 'IGNORE' statements.","singleLine":["IGNORE"]},{"fileExtensions":{"Befunge":[".bf"],"Chef":[".chef"],"DOS_COM":[".com"],"Malbolge":[".mb"],"PE_Binary":[".exe",".dll",".scr",".ocx"],"SPIR-V":[".spv"],"Shakespeare":[".spl"],"Shakespeare (SPL)":[".spl"],"Whitespace":[".ws"]},"langs":["Whitespace","Malbolge","Chef","Brainfuck","Befunge","Shakespeare (SPL)","Shakespeare","SPIR-V","DOS_COM","PE_Binary"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Only space, tab, LF are instructions; all else ignored.","singleLine":[]},{"fileExtensions":{"Factor":[".factor"],"Simula":[".sim"]},"langs":["Factor","Simula"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Single-line comments only.","singleLine":["!"]},{"fileExtensions":{"HyperCardScript":[".hcs"],"HyperTalk":[".hyp"]},"langs":["HyperCardScript","HyperTalk"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Alias of HyperTalk, single-line only.","singleLine":["--"]},{"fileExtensions":{"BlitzBasic":[".bb"],"Monkey":[".monkey"],"VBS":[".vbs",".vbe"],"VBScript":[".vbs",".vbe"],"Visual Basic Script":[".vbs",".vbe"]},"langs":["VBScript","VBS","Visual Basic Script","Monkey","BlitzBasic"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"Only apostrophe (') is valid for comments. 'REM' does not work in VBScript, unlike VBA/Batch.","singleLine":["'"]},{"fileExtensions":{"FreeBASIC":[".bas",".b"],"GW-Basic":[".bas",".b"],"QBasic":[".bas",".b"],"VBA":[".bas",".cls",".frm",".vba"]},"langs":["VBA","QBasic","GW-Basic","FreeBASIC"],"multiLine":[],"prompt_comment_opening_type":false,"quirks":"VBA uses the same comment syntax as classic Visual Basic (apostrophe or REM). VBA typically lives inside Office documents; exported modules commonly use .bas/.cls/.frm.","singleLine":["'","REM"]},{"fileExtensions":{"HTA":[".hta"]},"langs":["HTA"],"multiLine":["<!--","--","-->"],"prompt_comment_opening_type":false,"quirks":"HTA (HTML Application) is HTML + embedded scripts. Top-level markup uses <!-- -->. Embedded script blocks can be VBScript (use ' or REM) or JScript/ECMAScript (use // and /* */). This node treats HTA as a mixed-content file (unique node \u2014 not grouped with HTML, VBScript, or JS).","singleLine":["'","REM","//"]},{"fileExtensions":{"Texinfo":[".texi",".txi"]},"langs":["Texinfo"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":["@c","@comment"]},{"fileExtensions":{"PowerShell":[".ps1",".psm1"]},"langs":["PowerShell"],"multiLine":["<#","#","#>"],"prompt_comment_opening_type":false,"singleLine":["#"]},{"fileExtensions":{"VB":[".vb"],"VB.NET":[".vb"]},"langs":["VB","VB.NET"],"multiLine":[],"prompt_comment_opening_type":false,"singleLine":["'","REM"]},{"fileExtensions":{"WSF":[".wsf"]},"langs":["WSF"],"multiLine":["<!--","--","-->"],"prompt_comment_opening_type":false,"quirks":"WSF is XML-based and may embed VBScript ('), JScript (//, /* */), or other engines. Outer XML uses <!-- -->.","singleLine":["'","//"]}]}