{
    "langs": [
        {
            "langs": [
                "c",
                "c++",
                "cpp",
                "cuda-cpp",
                "c#",
                "csharp",
                "java",
                "javascript",
                "javascriptreact",
                "typescript",
                "typescriptreact",
                "swift",
                "kotlin",
                "io",
                "dylan",
                "fantom",
                "v",
                "zig",
                "verilog",
                "json",
                "jsonc",
                "go",
                "rust",
                "scala",
                "d",
                "dart",
                "objective-c",
                "objective-cpp",
                "groovy",
                "solidity",
                "sass",
                "scss",
                "less",
                "q#",
                "qml",
                "pony",
                "processing",
                "chapel",
                "glsl",
                "hlsl",
                "wgsl",
                "metal shading language (apple)",
                "metal shading language",
                "cypher (neo4j)",
                "cypher",
                "unrealscript",
                "gradle",
                "gradle (groovy)",
                "gradle (kotlin dsl)",
                "gradle (groovy/kotlin dsl)",
                "shaderlab",
                "stylus"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "//"
            ],
            "multiLine": [
                "/*",
                "*",
                "*/"
            ],
            "quirks": "Doc comments use /** ... */",
            "fileExtensions": {
                "c": [
                    ".c",
                    ".h"
                ],
                "c++": [
                    "cpp",
                    "c++",
                    "hpp",
                    "h++"
                ],
                "cpp": [
                    "cpp",
                    "c++",
                    "hpp",
                    "h++"
                ],
                "cuda-cpp": [
                    "cu",
                    "cuh"
                ],
                "c#": [
                    "cs"
                ],
                "csharp": [
                    "cs"
                ],
                "java": [
                    ".java"
                ],
                "javascript": [
                    ".js",
                    ".jsx",
                    ".mjs"
                ],
                "javascriptreact": [
                    ".js",
                    ".jsx",
                    ".mjs"
                ],
                "typescript": [
                    ".ts",
                    ".tsx"
                ],
                "typescriptreact": [
                    ".ts",
                    ".tsx"
                ],
                "swift": [
                    ".swift"
                ],
                "kotlin": [
                    ".kt",
                    ".kts"
                ],
                "io": [
                    ".io"
                ],
                "dylan": [
                    ".dylan",
                    ".dyl"
                ],
                "fantom": [
                    ".fan"
                ],
                "v": [
                    ".v"
                ],
                "zig": [
                    ".zig"
                ],
                "verilog": [
                    ".v",
                    ".sv",
                    ".vh"
                ],
                "json": [
                    ".json"
                ],
                "jsonc": [
                    ".jsonc"
                ],
                "go": [
                    ".go"
                ],
                "rust": [
                    ".rs"
                ],
                "scala": [
                    ".scala"
                ],
                "d": [
                    ".d"
                ],
                "dart": [
                    ".dart"
                ],
                "objective-c": [
                    ".m",
                    ".h"
                ],
                "objective-cpp": [
                    ".m",
                    ".mm",
                    ".hpp"
                ],
                "groovy": [
                    ".groovy"
                ],
                "solidity": [
                    ".sol"
                ],
                "sass": [
                    ".sass"
                ],
                "scss": [
                    ".scss"
                ],
                "less": [
                    ".less"
                ],
                "q#": [
                    ".qs"
                ],
                "qml": [
                    ".qml"
                ],
                "pony": [
                    ".pony"
                ],
                "processing": [
                    ".pde"
                ],
                "chapel": [
                    ".chpl"
                ],
                "glsl": [
                    ".glsl",
                    ".vert",
                    ".frag",
                    ".geom",
                    ".tesc",
                    ".tese",
                    ".comp"
                ],
                "hlsl": [
                    ".hlsl",
                    ".fx",
                    ".fxh",
                    ".cginc"
                ],
                "wgsl": [
                    ".wgsl"
                ],
                "metal shading language (apple)": [
                    ".metal"
                ],
                "metal shading language": [
                    ".metal"
                ],
                "cypher (neo4j)": [
                    ".cyp"
                ],
                "cypher": [
                    ".cyp"
                ],
                "unrealscript": [
                    ".uc"
                ],
                "gradle": [
                    ".gradle",
                    ".gradle.kts"
                ],
                "gradle (groovy)": [
                    ".gradle",
                    ".gradle.kts"
                ],
                "gradle (kotlin dsl)": [
                    ".gradle",
                    ".gradle.kts"
                ],
                "gradle (groovy/kotlin dsl)": [
                    ".gradle",
                    ".gradle.kts"
                ],
                "shaderlab": [
                    ".shader"
                ],
                "stylus": [
                    ".user.css",
                    ".user.styl",
                    ".styl"
                ]
            }
        },
        {
            "langs": [
                "Agda"
            ],
            "singleLine": [
                "--"
            ],
            "multiLine": [
                "{-",
                "-}"
            ],
            "fileExtensions": {
                "Agda": [
                    ".agda"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "Idris"
            ],
            "singleLine": [
                "--",
                "|||"
            ],
            "multiLine": [],
            "fileExtensions": {
                "Idris": [
                    ".idr"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "julia"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "#"
            ],
            "multiLine": [
                "#=",
                "=#"
            ],
            "quirks": "Supports nested block comments with #= ... =#.",
            "fileExtensions": {
                "julia": [
                    ".jl"
                ]
            }
        },
        {
            "langs": [
                "K",
                "q"
            ],
            "singleLine": [
                "/"
            ],
            "multiLine": [],
            "fileExtensions": {
                "K": [
                    ".k"
                ],
                "Q": [
                    ".q"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "ABAP",
                "abap"
            ],
            "singleLine": [
                "*",
                "\""
            ],
            "multiLine": [],
            "fileExtensions": {
                "ABAP": [
                    ".abap"
                ],
                "abap": [
                    ".abap"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "Mojo"
            ],
            "singleLine": [
                "#"
            ],
            "multiLine": [
                "\"\"\"",
                "\"\"\""
            ],
            "fileExtensions": {
                "Mojo": [
                    ".mojo"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "rexx",
                "pig latin (hadoop)",
                "pig latin",
                "hql (hive sql)",
                "hql"
            ],
            "singleLine": [
                "--"
            ],
            "multiLine": [
                "/*",
                "*",
                "*/"
            ],
            "fileExtensions": {
                "rexx": [
                    ".rexx",
                    ".rex"
                ],
                "pig latin (hadoop)": [
                    ".pig"
                ],
                "pig latin": [
                    ".pig"
                ],
                "hql (hive sql)": [
                    ".hql"
                ],
                "hql": [
                    ".hql"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "HCL"
            ],
            "singleLine": [
                "#",
                "//"
            ],
            "multiLine": [
                "/*",
                "*",
                "*/"
            ],
            "fileExtensions": {
                "HCL": [
                    ".hcl"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "handlebars"
            ],
            "singleLine": [],
            "multiLine": [
                "{{!--",
                "--",
                "--}}"
            ],
            "fileExtensions": {
                "handlebars": [
                    ".hbs",
                    ".handlebars"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "haml"
            ],
            "singleLine": [
                "/"
            ],
            "multiLine": [
                "-#",
                "-",
                "-#"
            ],
            "fileExtensions": {
                "haml": [
                    ".haml"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "slim"
            ],
            "singleLine": [
                "/"
            ],
            "multiLine": [],
            "fileExtensions": {
                "slim": [
                    ".slim",
                    ".html.slim"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "J"
            ],
            "singleLine": [
                "NB."
            ],
            "multiLine": [],
            "fileExtensions": {
                "J": [
                    ".j"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "ini"
            ],
            "singleLine": [
                ";",
                "#"
            ],
            "multiLine": [],
            "fileExtensions": {
                "ini": [
                    ".ini"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "APL"
            ],
            "singleLine": [
                "⍝"
            ],
            "multiLine": [],
            "fileExtensions": {
                "APL": [
                    ".apl"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "Forth"
            ],
            "singleLine": [
                "\\"
            ],
            "multiLine": [
                "(",
                "*",
                ")"
            ],
            "fileExtensions": {
                "Forth": [
                    ".fth",
                    ".fs"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "coffeescript"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "#"
            ],
            "multiLine": [
                "###",
                "#",
                "###"
            ],
            "quirks": "No native multi-line comments. Multi-line can be faked with here-docs like `: <<'EOF' ... EOF`.",
            "fileExtensions": {
                "coffeescript": [
                    ".coffee.md",
                    ".litcoffee"
                ]
            }
        },
        {
            "langs": [
                "shell",
                "shellscript",
                "apache",
                "nginx",
                "dockerfile",
                "dockerfile",
                "dockercompose",
                "makefile",
                "toml",
                "tcl",
                "expect",
                "org-mode",
                "cmake",
                "nial",
                "opengl arb assembly",
                "godot gdscript",
                "boo",
                "ninja build files",
                "git-commit",
                "git-rebase",
                "dotenv"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "#"
            ],
            "multiLine": [],
            "quirks": "No native multi-line comments. Multi-line can be faked with here-docs like `: <<'EOF' ... EOF`.",
            "fileextensions": {
                "shell": [
                    ".sh",
                    ".bash",
                    ".zsh",
                    ".ksh",
                    ".fish"
                ],
                "shellscript": [
                    ".sh",
                    ".bash",
                    ".zsh",
                    ".ksh",
                    ".fish"
                ],
                "apache": [
                    ".conf"
                ],
                "nginx": [
                    ".conf"
                ],
                "dockerfile": [
                    "dockerfile",
                    "dockerfile"
                ],
                "dockercompose": [
                    "dockercompose.yaml",
                    "dockercompose.yml",
                    "docker-compose.yaml",
                    "docker-compose.yml"
                ],
                "makefile": [
                    "makefile",
                    "Makefile"
                ],
                "toml": [
                    ".toml"
                ],
                "tcl": [
                    ".tcl"
                ],
                "expect": [
                    ".exp"
                ],
                "org-mode": [
                    ".org"
                ],
                "cmake": [
                    "cmakelists.txt",
                    "CMakeLists.txt",
                    ".cmake"
                ],
                "nial": [
                    ".nial"
                ],
                "opengl arb assembly": [
                    ".arb"
                ],
                "godot gdscript": [
                    ".gd"
                ],
                "boo": [
                    ".boo"
                ],
                "ninja build files": [
                    ".ninja"
                ],
                "dotenv": [
                    "env"
                ]
            }
        },
        {
            "langs": [
                "reStructuredText"
            ],
            "singleLine": [
                ".."
            ],
            "multiLine": [],
            "fileExtensions": {
                "reStructuredText": [
                    ".rst"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "python"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "#"
            ],
            "multiLine": [
                "\"\"\"",
                "#",
                "\"\"\""
            ],
            "quirks": "Triple quotes are technically strings, but often used as block comments/docstrings.",
            "fileExtensions": {
                "python": [
                    ".py",
                    ".pyw",
                    ".pyi"
                ]
            }
        },
        {
            "langs": [
                "Eiffel",
                "Ada"
            ],
            "singleLine": [
                "--"
            ],
            "multiLine": [],
            "fileExtensions": {
                "Eiffel": [
                    ".e"
                ],
                "Ada": [
                    ".adb",
                    ".ads"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "SQL",
                "Sqlite",
                "Microsoft SQL Server",
                "SQL Express"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "--"
            ],
            "multiLine": [
                "/*",
                "*",
                "*/"
            ],
            "quirks": "Some dialects also accept # (MySQL).",
            "fileExtensions": {
                "SQL": [
                    ".sql",
                    ".ddl",
                    ".dml"
                ],
                "Microsoft SQL Server": [
                    ".sql"
                ],
                "SQL Express": [
                    ".sql"
                ],
                "Sqlite": [
                    ".sqlite",
                    ".sqlite3"
                ]
            }
        },
        {
            "langs": [
                "SQL*Plus",
                "Euphoria"
            ],
            "singleLine": [
                "--"
            ],
            "multiLine": [],
            "fileExtensions": {
                "SQL*Plus": [
                    ".sql"
                ],
                "Euphoria": [
                    ".exu"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "AArch64",
                "Asciidoc",
                "Gremlin"
            ],
            "singleLine": [
                "//"
            ],
            "multiLine": [],
            "quirks": "ARM 64-bit assembly (AArch64). Usually single-line comments use '//' in modern assemblers.",
            "prompt_comment_opening_type": false,
            "fileExtensions": {
                "AArch64": [
                    ".s",
                    ".S"
                ],
                "Asciidoc": [
                    ".adoc",
                    ".asciidoc"
                ],
                "Gremlin": [
                    ".gremlin"
                ]
            }
        },
        {
            "langs": [
                "SPARC"
            ],
            "singleLine": [
                "!"
            ],
            "multiLine": [],
            "quirks": "ARM 64-bit assembly (AArch64). Usually single-line comments use '//' in modern assemblers.",
            "prompt_comment_opening_type": false,
            "fileExtensions": {
                "SPARC": [
                    ".s",
                    ".S",
                    ".asm"
                ]
            }
        },
        {
            "langs": [
                "Assembly_x86",
                "NASM/TASM",
                "Assembly_6502",
                "Assembly_Z80",
                "MASM",
                "PowerPC",
                "6502",
                "65C02",
                "6809",
                "8080",
                "8085",
                "Z80",
                "Motorola_68k",
                "68k",
                "Itanium_IA64",
                "PIC16",
                "PIC18",
                "AVR",
                "STM32",
                "Cortex-M",
                "PDP-11",
                "VAX",
                "Clojure",
                "clojure"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                ";"
            ],
            "multiLine": [],
            "quirks": "NASM/TASM use ';'. GAS (AT&T syntax) uses '#'.",
            "fileExtensions": {
                "Assembly_x86": [
                    ".asm",
                    ".s"
                ],
                "NASM/TASM": [
                    ".asm",
                    ".s"
                ],
                "Assembly_6502": [
                    ".asm",
                    ".s"
                ],
                "Assembly_Z80": [
                    ".asm",
                    ".s"
                ],
                "MASM": [
                    ".asm"
                ],
                "PowerPC": [
                    ".s",
                    ".asm"
                ],
                "6502": [
                    ".asm",
                    ".s"
                ],
                "65C02": [
                    ".asm",
                    ".s"
                ],
                "6809": [
                    ".asm",
                    ".s"
                ],
                "8080": [
                    ".asm",
                    ".s"
                ],
                "8085": [
                    ".asm",
                    ".s"
                ],
                "Z80": [
                    ".asm",
                    ".s"
                ],
                "Motorola_68k": [
                    ".asm",
                    ".s"
                ],
                "68k": [
                    ".asm",
                    ".s"
                ],
                "Itanium_IA64": [
                    ".s",
                    ".asm"
                ],
                "PIC16": [
                    ".asm"
                ],
                "PIC18": [
                    ".asm"
                ],
                "AVR": [
                    ".asm"
                ],
                "STM32": [
                    ".s",
                    ".asm"
                ],
                "Cortex-M": [
                    ".s",
                    ".asm"
                ],
                "PDP-11": [
                    ".asm",
                    ".s"
                ],
                "VAX": [
                    ".s",
                    ".asm"
                ],
                "Clojure": [
                    ".clj",
                    ".cljs",
                    ".cljc"
                ],
                "clojure": [
                    ".clj",
                    ".cljs",
                    ".cljc"
                ]
            }
        },
        {
            "langs": [
                "ARM",
                "Assembly_ARM"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "@",
                ";"
            ],
            "multiLine": [],
            "quirks": "Old ARM assembly uses '@' for single-line comments. No standard block comments.",
            "fileExtensions": {
                "Assembly_ARM": [
                    ".s",
                    ".asm"
                ],
                "ARM": [
                    ".s",
                    ".asm"
                ]
            }
        },
        {
            "langs": [
                "yaml",
                "awk",
                "sed",
                "r",
                "elixir",
                "gas",
                "perl",
                "perl6",
                "mips",
                "risc-v",
                "crystal"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "#"
            ],
            "multiLine": [],
            "quirks": "Must be at line start (no inline after data in some parsers).",
            "fileExtensions": {
                "yaml": [
                    ".yml",
                    ".yaml"
                ],
                "awk": [
                    ".awk"
                ],
                "sed": [
                    ".sed"
                ],
                "r": [
                    ".r",
                    ".R"
                ],
                "elixir": [
                    ".ex",
                    ".exs"
                ],
                "gas": [
                    ".s",
                    ".s"
                ],
                "perl": [
                    ".pl",
                    ".pm",
                    ".t"
                ],
                "perl6": [
                    ".p6",
                    ".pl",
                    ".pl6",
                    ".pm",
                    ".pm6",
                    ".pm6",
                    ".rakumod",
                    ".pod",
                    ".pod6"
                ],
                "mips": [
                    ".s",
                    ".asm"
                ],
                "risc-v": [
                    ".s",
                    ".s"
                ],
                "crystal": [
                    ".cr"
                ]
            }
        },
        {
            "langs": [
                "html",
                "xml",
                "markdown",
                "svelte",
                "vue",
                "vue-html"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [],
            "multiLine": [
                "<!--",
                "--",
                "-->"
            ],
            "quirks": "SGML-style, must not be nested.",
            "fileExtensions": {
                "html": [
                    ".html",
                    ".htm"
                ],
                "markdown": [
                    ".md",
                    ".markdown"
                ],
                "xml": [
                    ".xml",
                    ".xhtml"
                ],
                "svelte": [
                    ".svelte",
                    ".html"
                ],
                "vue": [
                    ".vue"
                ],
                "vue-html": [
                    ".vue"
                ]
            }
        },
        {
            "langs": [
                "xsl"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [],
            "multiLine": [
                "<xsl:comment>",
                "--",
                "</xsl:comment>"
            ],
            "quirks": "SGML-style, must not be nested.",
            "fileExtensions": {
                "xsl": [
                    ".xsl"
                ]
            }
        },
        {
            "langs": [
                "ColdFusion (CFML)",
                "ColdFusion"
            ],
            "singleLine": [],
            "multiLine": [
                "<!---",
                "---",
                "--->"
            ],
            "fileExtensions": {
                "ColdFusion (CFML)": [
                    ".cfm",
                    ".cfc"
                ],
                "ColdFusion": [
                    ".cfm",
                    ".cfc"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "CSS",
                "css",
                "PL/I"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [],
            "multiLine": [
                "/*",
                "*",
                "*/"
            ],
            "quirks": "Only block comments are supported. No single-line comment syntax like `//`.",
            "fileExtensions": {
                "CSS": [
                    ".css"
                ],
                "css": [
                    ".css"
                ],
                "PL/I": [
                    ".pli",
                    ".pl1"
                ]
            }
        },
        {
            "langs": [
                "SCSS",
                "Less",
                "Haxe"
            ],
            "singleLine": [
                "//"
            ],
            "multiLine": [
                "/*",
                "*",
                "*/"
            ],
            "fileExtensions": {
                "SCSS": [
                    ".scss"
                ],
                "Less": [
                    ".less"
                ],
                "Haxe": [
                    ".hx"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "php"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "//",
                "#"
            ],
            "multiLine": [
                "/*",
                "*",
                "*/"
            ],
            "quirks": "Supports C-style `/* */` multi-line comments. Both `//` and `#` are valid single-line comment starters.",
            "fileExtensions": {
                "php": [
                    ".php",
                    ".phtml"
                ]
            }
        },
        {
            "langs": [
                "ruby"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "#"
            ],
            "multiLine": [
                "=begin",
                "=end"
            ],
            "quirks": "`=begin`/`=end` must start at column 0. Single-line `#` comments can appear anywhere.",
            "fileExtensions": {
                "ruby": [
                    ".rb",
                    ".rbw"
                ]
            }
        },
        {
            "langs": [
                "Lisp"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                ";"
            ],
            "multiLine": [],
            "quirks": "One ';' for inline, ';;' or ';;;' for section/doc conventions.",
            "fileExtensions": {
                "Lisp": [
                    ".lisp",
                    ".lsp",
                    ".cl",
                    ".clisp",
                    ".el"
                ]
            }
        },
        {
            "langs": [
                "Scheme",
                "Racket"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                ";"
            ],
            "multiLine": [
                "#|",
                "|#"
            ],
            "quirks": "One ';' for inline, ';;' or ';;;' for section/doc conventions.",
            "fileExtensions": {
                "Scheme": [
                    ".scm",
                    ".ss",
                    ".sld",
                    ".sch",
                    ".sc"
                ],
                "Racket": [
                    ".rkt"
                ]
            }
        },
        {
            "langs": [
                "Nim"
            ],
            "singleLine": [
                "#"
            ],
            "multiLine": [
                "#[",
                "#",
                " ]#"
            ],
            "fileExtensions": {
                "Nim": [
                    ".nim"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "Batch",
                "bat"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "@REM",
                "::"
            ],
            "multiLine": [],
            "quirks": ":: is a hack; REM is the official keyword.",
            "fileExtensions": {
                "Batch": [
                    ".bat",
                    ".cmd"
                ],
                "bat": [
                    ".bat",
                    ".cmd"
                ]
            }
        },
        {
            "langs": [
                "VHDL"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "--"
            ],
            "multiLine": [],
            "quirks": "No block comments, only line comments.",
            "fileExtensions": {
                "VHDL": [
                    ".vhdl",
                    ".vhd"
                ]
            }
        },
        {
            "langs": [
                "Matlab",
                "Octave"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "%"
            ],
            "multiLine": [
                "%{",
                "%",
                "%}"
            ],
            "quirks": "%% marks cell boundaries in scripts.",
            "fileExtensions": {
                "Matlab": [
                    ".m"
                ],
                "Octave": [
                    ".m"
                ]
            }
        },
        {
            "langs": [
                "Octave"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "#",
                "%"
            ],
            "multiLine": [],
            "quirks": "Supports both '#' and '%'.",
            "fileExtensions": {
                "Octave": [
                    ".m"
                ]
            }
        },
        {
            "langs": [
                "SAS"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "*"
            ],
            "multiLine": [
                "/*",
                "*",
                "*/"
            ],
            "quirks": "Single line '*' requires a terminating semicolon.",
            "fileExtensions": {
                "SAS": [
                    ".sas"
                ]
            }
        },
        {
            "langs": [
                "Stata"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "*",
                "//"
            ],
            "multiLine": [
                "/*",
                "*",
                "*/"
            ],
            "quirks": "* must appear at start of line.",
            "fileExtensions": {
                "Stata": [
                    ".do",
                    ".ado"
                ]
            }
        },
        {
            "langs": [
                "Fortran"
            ],
            "singleLine": [
                "C",
                "c",
                "*",
                "!"
            ],
            "prompt_comment_opening_type": true,
            "multiLine": [],
            "quirks": "Older fixed-format Fortran uses column-specific rules.",
            "fileExtensions": {
                "Fortran": [
                    ".f",
                    ".for",
                    ".f90",
                    ".f95"
                ]
            }
        },
        {
            "langs": [
                "COBOL",
                "SNOBOL",
                "ICON"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "*"
            ],
            "multiLine": [],
            "quirks": "Column 7 with '*' denotes a comment line. '*> comment' is free-form.",
            "fileExtensions": {
                "COBOL": [
                    ".cob",
                    ".cbl"
                ],
                "SNOBOL": [
                    ".sno"
                ],
                "ICON": [
                    ".icn"
                ]
            }
        },
        {
            "langs": [
                "Ada"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "--"
            ],
            "multiLine": [],
            "quirks": "No block comments.",
            "fileExtensions": {
                "Ada": [
                    ".adb",
                    ".ads"
                ]
            }
        },
        {
            "langs": [
                "Smalltalk"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [],
            "multiLine": [
                "\"",
                "\""
            ],
            "quirks": "Double quotes enclose comments.",
            "fileExtensions": {
                "Smalltalk": [
                    ".st"
                ]
            }
        },
        {
            "langs": [
                "Prolog",
                "Mercury"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "%"
            ],
            "multiLine": [
                "/*",
                "*",
                "*/"
            ],
            "quirks": "Some dialects also allow '//' as single-line.",
            "fileExtensions": {
                "Prolog": [
                    ".pl",
                    ".pro"
                ],
                "Mercury": [
                    ".m",
                    ".mercury"
                ]
            }
        },
        {
            "langs": [
                "Mercury"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "%"
            ],
            "multiLine": [
                "/*",
                "*",
                "*/"
            ],
            "quirks": "Similar to Prolog but stricter syntax.",
            "fileExtensions": {
                "Mercury": [
                    ".m"
                ]
            }
        },
        {
            "langs": [
                "erlang",
                "postScript"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "%"
            ],
            "multiLine": [],
            "quirks": "No block comments.",
            "fileExtensions": {
                "erlang": [
                    ".erl",
                    ".hrl"
                ],
                "postScript": [
                    ".ps"
                ]
            }
        },
        {
            "langs": [
                "haskell"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "--"
            ],
            "multiLine": [
                "{-",
                "-",
                "-}"
            ],
            "quirks": "Nested block comments are supported.",
            "fileExtensions": {
                "haskell": [
                    ".hs",
                    ".lhs"
                ]
            }
        },
        {
            "langs": [
                "pascal"
            ],
            "singleLine": [],
            "multiLine": [
                "(*",
                "*",
                "*)"
            ],
            "fileExtensions": {
                "pascal": [
                    ".pas",
                    ".pp"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "diff"
            ],
            "singleLine": [
                "#"
            ],
            "multiLine": [],
            "fileExtensions": {
                "diff": [
                    ".diff",
                    ".patch",
                    ".gz",
                    ".bz2"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "Lean"
            ],
            "singleLine": [],
            "multiLine": [
                "/-",
                "-",
                "-/"
            ],
            "fileExtensions": {
                "Lean": [
                    ".lean"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "ocaml",
                "reasonml",
                "modula2",
                "modula-2",
                "oberon",
                "coq"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [],
            "multiLine": [
                "(*",
                "*",
                "*)"
            ],
            "quirks": "Supports nested block comments.",
            "fileExtensions": {
                "ocaml": [
                    ".ml",
                    ".mli"
                ],
                "reasonml": [
                    ".re",
                    ".rei"
                ],
                "modula2": [
                    ".mod",
                    ".def"
                ],
                "modula-2": [
                    ".mod",
                    ".def"
                ],
                "oberon": [
                    ".ob",
                    ".oh"
                ],
                "coq": [
                    ".v"
                ]
            }
        },
        {
            "langs": [
                "f#",
                "fsharp"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "//"
            ],
            "multiLine": [
                "(*",
                "*",
                "*)"
            ],
            "quirks": "Inherited OCaml-style block comments plus C-style single-line.",
            "fileExtensions": {
                "f#": [
                    ".fs",
                    ".fsi"
                ],
                "fsharp": [
                    ".fs",
                    ".fsi"
                ]
            }
        },
        {
            "langs": [
                "IBM mainframe JCL"
            ],
            "singleLine": [
                "//*"
            ],
            "multiLine": [],
            "fileExtensions": {
                "IBM mainframe JCL": [
                    ".jcl"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "INTERCAL"
            ],
            "singleLine": [
                "PLEASE ignore this"
            ],
            "multiLine": [],
            "fileExtensions": {
                "INTERCAL": [
                    ".i"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "Nim"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "#"
            ],
            "multiLine": [
                "#[",
                "#",
                "]#"
            ],
            "quirks": "Block comments can be nested.",
            "fileExtensions": {
                "Nim": [
                    ".nim",
                    ".nims"
                ]
            }
        },
        {
            "langs": [
                "Crystal"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "#"
            ],
            "multiLine": [],
            "quirks": "Doc comments use '##'.",
            "fileExtensions": {
                "Crystal": [
                    ".cr"
                ]
            }
        },
        {
            "langs": [
                "lua"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "--"
            ],
            "multiLine": [
                "--[[",
                "-",
                "]]"
            ],
            "quirks": "Multi-line can also be nested with '--[=[ ... ]=]'.",
            "fileExtensions": {
                "lua": [
                    ".lua"
                ]
            }
        },
        {
            "langs": [
                "tex",
                "latex",
                "bibtex"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "%"
            ],
            "multiLine": [],
            "quirks": "Entire line after % is ignored.",
            "fileExtensions": {
                "tex": [
                    ".tex",
                    ".sty",
                    ".cls"
                ],
                "latex": [
                    ".tex"
                ],
                "bibtex": [
                    ".bib"
                ]
            }
        },
        {
            "langs": [
                "Algol60",
                "Algol68",
                "AlgolW",
                "Algol-W"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "COMMENT",
                "comment"
            ],
            "multiLine": [],
            "quirks": "Block comments use the keyword COMMENT followed by a semicolon.",
            "fileExtensions": {
                "Algol60": [
                    ".alg",
                    ".a60"
                ],
                "Algol68": [
                    ".alg68"
                ],
                "AlgolW": [
                    ".algw"
                ],
                "Algol-W": [
                    ".algw"
                ]
            }
        },
        {
            "langs": [
                "Logo"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                ";"
            ],
            "multiLine": [],
            "quirks": "Only single-line comments.",
            "fileExtensions": {
                "Logo": [
                    ".logo",
                    ".lgo"
                ]
            }
        },
        {
            "langs": [
                "AppleScript"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "--"
            ],
            "multiLine": [
                "(*",
                "*",
                "*)"
            ],
            "quirks": "Nested block comments are supported.",
            "fileExtensions": {
                "AppleScript": [
                    ".applescript",
                    ".scpt",
                    ".scptd"
                ]
            }
        },
        {
            "langs": [
                "LOLCODE"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "BTW"
            ],
            "multiLine": [
                "OBTW",
                "NEXT",
                "TLDR"
            ],
            "quirks": "Only idiomatic block comments using OBTW/TLDR.",
            "fileExtensions": {
                "LOLCODE": [
                    ".lol",
                    ".lc"
                ]
            }
        },
        {
            "langs": [
                "INTERCAL"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "IGNORE"
            ],
            "multiLine": [],
            "quirks": "Comments are written as 'IGNORE' statements.",
            "fileExtensions": {
                "INTERCAL": [
                    ".i",
                    ".inc"
                ]
            }
        },
        {
            "langs": [
                "whitespace",
                "malbolge",
                "chef",
                "brainfuck",
                "befunge",
                "shakespeare (spl)",
                "shakespeare",
                "spir-v",
                "dos_com",
                "pe_binary",
                "plaintext"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [],
            "multiLine": [],
            "quirks": "Only space, tab, LF are instructions; all else ignored.",
            "fileExtensions": {
                "whitespace": [
                    ".ws"
                ],
                "malbolge": [
                    ".mb"
                ],
                "chef": [
                    ".chef"
                ],
                "befunge": [
                    ".bf"
                ],
                "shakespeare (spl)": [
                    ".spl"
                ],
                "shakespeare": [
                    ".spl"
                ],
                "spir-v": [
                    ".spv"
                ],
                "dos_com": [
                    ".com"
                ],
                "pe_binary": [
                    ".exe",
                    ".dll",
                    ".scr",
                    ".ocx"
                ],
                "plaintext": [
                    ".txt"
                ]
            }
        },
        {
            "langs": [
                "Factor",
                "Simula"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "!"
            ],
            "multiLine": [],
            "quirks": "Single-line comments only.",
            "fileExtensions": {
                "Factor": [
                    ".factor"
                ],
                "Simula": [
                    ".sim"
                ]
            }
        },
        {
            "langs": [
                "HyperCardScript",
                "HyperTalk"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "--"
            ],
            "multiLine": [],
            "quirks": "Alias of HyperTalk, single-line only.",
            "fileExtensions": {
                "HyperCardScript": [
                    ".hcs"
                ],
                "HyperTalk": [
                    ".hyp"
                ]
            }
        },
        {
            "langs": [
                "VBScript",
                "VBS",
                "Visual Basic Script",
                "Monkey",
                "BlitzBasic"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "'"
            ],
            "multiLine": [],
            "quirks": "Only apostrophe (') is valid for comments. 'REM' does not work in VBScript, unlike VBA/Batch.",
            "fileExtensions": {
                "VBScript": [
                    ".vbs",
                    ".vbe"
                ],
                "VBS": [
                    ".vbs",
                    ".vbe"
                ],
                "Visual Basic Script": [
                    ".vbs",
                    ".vbe"
                ],
                "Monkey": [
                    ".monkey"
                ],
                "BlitzBasic": [
                    ".bb"
                ]
            }
        },
        {
            "langs": [
                "VBA",
                "QBasic",
                "GW-Basic",
                "FreeBASIC"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "'",
                "@REM"
            ],
            "multiLine": [],
            "quirks": "VBA uses the same comment syntax as classic Visual Basic (apostrophe or REM). VBA typically lives inside Office documents; exported modules commonly use .bas/.cls/.frm.",
            "fileExtensions": {
                "VBA": [
                    ".bas",
                    ".cls",
                    ".frm",
                    ".vba"
                ],
                "QBasic": [
                    ".bas",
                    ".b"
                ],
                "GW-Basic": [
                    ".bas",
                    ".b"
                ],
                "FreeBASIC": [
                    ".bas",
                    ".b"
                ]
            }
        },
        {
            "langs": [
                "HTA"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "'",
                "@REM",
                "//"
            ],
            "multiLine": [
                "<!--",
                "--",
                "-->"
            ],
            "quirks": "HTA (HTML Application) is HTML + embedded scripts. Top-level markup uses <!-- -->. Embedded script blocks can be VBScript (use ' or REM) or JScript/ECMAScript (use // and /* */). This node treats HTA as a mixed-content file (unique node — not grouped with HTML, VBScript, or JS).",
            "fileExtensions": {
                "HTA": [
                    ".hta"
                ]
            }
        },
        {
            "langs": [
                "texinfo"
            ],
            "singleLine": [
                "@c",
                "@comment"
            ],
            "multiLine": [],
            "fileExtensions": {
                "texinfo": [
                    ".texi",
                    ".txi"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "razor"
            ],
            "singleLine": [],
            "multiLine": [
                "@*",
                "*",
                "*@"
            ],
            "fileExtensions": {
                "razor": [
                    ".razor"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "powershell"
            ],
            "singleLine": [
                "#"
            ],
            "multiLine": [
                "<#",
                "#",
                "#>"
            ],
            "fileExtensions": {
                "powershell": [
                    ".ps1",
                    ".psm1"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "vb",
                "vb.net"
            ],
            "singleLine": [
                "'",
                "@REM"
            ],
            "multiLine": [],
            "fileExtensions": {
                "vb": [
                    ".vb"
                ],
                "vb.net": [
                    ".vb"
                ]
            },
            "prompt_comment_opening_type": false
        },
        {
            "langs": [
                "jade",
                "pug"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "//-"
            ],
            "multiLine": [
                "<!--",
                "--",
                "-->"
            ],
            "quirks": "",
            "fileExtensions": {
                "jade": [
                    ".jade"
                ],
                "pug": [
                    ".pug"
                ]
            }
        },
        {
            "langs": [
                "WSF"
            ],
            "prompt_comment_opening_type": false,
            "singleLine": [
                "'",
                "//"
            ],
            "multiLine": [
                "<!--",
                "--",
                "-->"
            ],
            "quirks": "WSF is XML-based and may embed VBScript ('), JScript (//, /* */), or other engines. Outer XML uses <!-- -->.",
            "fileExtensions": {
                "WSF": [
                    ".wsf"
                ]
            }
        }
    ]
}
